{"ast":null,"code":"import _slicedToArray from \"/Users/muratahiroki/React-ToDoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/muratahiroki/React-ToDoApp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const _useState = useState([\"\"]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todoText = _useState2[0],\n        setTodoText = _useState2[1];\n\n  const _useState3 = useState(['TODOリストです', '二つ目のTODOリストです']),\n        _useState4 = _slicedToArray(_useState3, 2),\n        imCompliteTodos = _useState4[0],\n        setIncompleteTodos = _useState4[1];\n\n  const _useState5 = useState(['1つ目の完了TODO', '2つめの完了TODO']),\n        _useState6 = _slicedToArray(_useState5, 2),\n        completeTodos = _useState6[0],\n        setCompleteTodos = _useState6[1];\n\n  const onChangeTodoText = event => setTodoText(event.target.value);\n\n  const onClickAdd = () => {\n    if (todoText === \"\") return;\n    const newTodos = [...imCompliteTodos, todoText];\n    setIncompleteTodos(newTodos);\n    setTodoText('');\n  };\n\n  const onClickDelete = index => {\n    const newTodos = [...imCompliteTodos];\n    newTodos.splice(index, 1);\n    setIncompleteTodos(newTodos);\n  };\n\n  const onClickComplete = () => {\n    const newInCompleteTodos = [...imCompliteTodos];\n    newInCompleteTodos.splice(index, 1);\n    setIncompleteTodos(newTodos);\n    const newCompleteTodos = [...completeTodos, imCompliteTodos[index]];\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"TODO\\u3092\\u5165\\u529B\",\n        value: todoText,\n        onChange: onChangeTodoText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickAdd,\n        children: \"\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inCompliteArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: \"\\u672A\\u5B8C\\u4E86\\u306ETODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: imCompliteTodos.map((todo, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listRow\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: todo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onClickComplete,\n              children: \"\\u5B8C\\u4E86\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onClickDelete(index),\n              children: \"\\u524A\\u9664\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, todo, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completeArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: \"\\u5B8C\\u4E86\\u6E08\\u306ETODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: completeTodos.map(todo => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listRow\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: todo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"\\u623B\\u3059\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)]\n          }, todo, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"DBmh7pZnPsqv4Exzh5Nu2otbjkA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/muratahiroki/React-ToDoApp/src/App.js"],"names":["React","useState","App","todoText","setTodoText","imCompliteTodos","setIncompleteTodos","completeTodos","setCompleteTodos","onChangeTodoText","event","target","value","onClickAdd","newTodos","onClickDelete","index","splice","onClickComplete","newInCompleteTodos","newCompleteTodos","map","todo"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.css\"\n\n\nconst App = () =>{\n  const [todoText,setTodoText] = useState([\"\"])\n  const [imCompliteTodos,setIncompleteTodos] = useState(['TODOリストです','二つ目のTODOリストです']);\n  const[completeTodos,setCompleteTodos] = useState(['1つ目の完了TODO','2つめの完了TODO']);\n  const onChangeTodoText = (event) => setTodoText(event.target.value);\n\n  const onClickAdd = ()=>{\n    if (todoText === \"\") return;\n    const newTodos = [...imCompliteTodos, todoText]\n    setIncompleteTodos(newTodos);\n\n    setTodoText('')\n  };\n\n  const onClickDelete = (index)=>{\n    const newTodos =[...imCompliteTodos];\n    newTodos.splice(index,1);\n    setIncompleteTodos(newTodos);\n  };\n\n  const onClickComplete = ()=>{\n    const newInCompleteTodos =[...imCompliteTodos];\n    newInCompleteTodos.splice(index,1);\n    setIncompleteTodos(newTodos);\n\n    const newCompleteTodos =[...completeTodos,imCompliteTodos[index]];\n  }\n\n  return(\n    <React.Fragment>\n      <div className=\"inputArea\">\n        <input placeholder=\"TODOを入力\" value={todoText} onChange = {onChangeTodoText} />\n        <button onClick={onClickAdd}>追加</button>\n      </div>\n\n      <div className=\"inCompliteArea\">\n        <p className =\"title\">未完了のTODO</p>\n        <ul>\n          {imCompliteTodos.map((todo, index)=>{\n            return(\n              <div key = {todo} className=\"listRow\">\n                <li>{todo}</li>\n                <button onClick = {onClickComplete}>完了</button>\n                <button onClick = {()=>onClickDelete(index)}>削除</button>\n              </div>\n          );\n        })}\n        </ul>\n        </div>\n\n      <div className =\"completeArea\">\n        <p className =\"title\">完了済のTODO</p>\n          <ul>\n          {completeTodos.map((todo)=>{\n          return (\n          <div key ={todo} className = \"listRow\">\n            <li>{todo}</li>\n            <button>戻す</button>\n          </div>\n          );\n        })}\n          </ul>\n        </div>\n      \n    </React.Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}